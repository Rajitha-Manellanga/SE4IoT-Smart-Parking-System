[
    {
        "id": "1f172e9da11781aa",
        "type": "tab",
        "label": "Entry Gate",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fbb51dca8b22017a",
        "type": "mysql",
        "z": "1f172e9da11781aa",
        "mydb": "44479277321f9a71",
        "name": "Get Booking Data",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "f6748fabdc26b078"
            ]
        ]
    },
    {
        "id": "f21826c53284ad4e",
        "type": "debug",
        "z": "1f172e9da11781aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 900,
        "wires": []
    },
    {
        "id": "40f30ea888971ae7",
        "type": "inject",
        "z": "1f172e9da11781aa",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "f0519fe5e2bb8b2a"
            ]
        ]
    },
    {
        "id": "d5cbd5462ca1178c",
        "type": "openalpr-cloud",
        "z": "1f172e9da11781aa",
        "country": [
            "eu"
        ],
        "secretKey": "sk_eaa1e2b23c14328a1b583422",
        "limit": "0",
        "recognizeVehicle": false,
        "skipEmpty": true,
        "passImage": false,
        "name": "Car Plate Recognizer",
        "x": 280,
        "y": 480,
        "wires": [
            [
                "d3ebe1a7fb115ee1"
            ]
        ]
    },
    {
        "id": "f0519fe5e2bb8b2a",
        "type": "file in",
        "z": "1f172e9da11781aa",
        "name": "Input Cars",
        "filename": "/tmp/car2.jpeg",
        "format": "stream",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": true,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "04d49222bd960e86"
            ]
        ]
    },
    {
        "id": "04d49222bd960e86",
        "type": "base64",
        "z": "1f172e9da11781aa",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "d5cbd5462ca1178c"
            ]
        ]
    },
    {
        "id": "d3ebe1a7fb115ee1",
        "type": "function",
        "z": "1f172e9da11781aa",
        "name": "Confirm Booking",
        "func": "var numberPlate = msg.payload.vehicles[0].plate[0].plate;\ncontext.set('numberPlate', numberPlate);\nflow.set('numberPlate', numberPlate);\nvar query = \"Select COUNT(*) as Count from Bookings B INNER JOIN Vehicles V ON B.UserId = V.UserId Where V.LicensePlate='\" + numberPlate + \"'\";\nmsg = {'topic':query};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 560,
        "wires": [
            [
                "fbb51dca8b22017a"
            ]
        ]
    },
    {
        "id": "f6748fabdc26b078",
        "type": "function",
        "z": "1f172e9da11781aa",
        "name": "manage booking data",
        "func": "var dataPresenceCheck = msg.payload[0]['Count']\n//var query = \"Select COUNT(*) from Bookings B INNER JOIN Vehicles V ON B.UserId = V.UserId Where V.LicensePlate='\" + numberPlate + \"'\";\nmsg = {'payload':dataPresenceCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 700,
        "wires": [
            [
                "e122aff9bad67ffb"
            ]
        ]
    },
    {
        "id": "e122aff9bad67ffb",
        "type": "switch",
        "z": "1f172e9da11781aa",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 780,
        "wires": [
            [
                "96047807301576b1"
            ],
            [
                "1e8d7dce619d3a2b"
            ]
        ]
    },
    {
        "id": "96047807301576b1",
        "type": "mqtt out",
        "z": "1f172e9da11781aa",
        "name": "Gate Broker",
        "topic": "/actuator/gate/entry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e157bdfbee11adb2",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "04e3b41f8166274d",
        "type": "mqtt in",
        "z": "1f172e9da11781aa",
        "name": "Gate Open",
        "topic": "/actuator/gate/entry",
        "qos": "2",
        "datatype": "auto",
        "broker": "e157bdfbee11adb2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 60,
        "y": 1060,
        "wires": [
            [
                "2f427a12f5bfb341",
                "318189a426551c31"
            ]
        ]
    },
    {
        "id": "2f427a12f5bfb341",
        "type": "debug",
        "z": "1f172e9da11781aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 1260,
        "wires": []
    },
    {
        "id": "dca4d7d042083bd7",
        "type": "influxdb out",
        "z": "1f172e9da11781aa",
        "influxdb": "06453e8616cf59b9",
        "name": "Record Incoming Vehicle",
        "measurement": "entrycarcount",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "UNIVAQ-IOT",
        "bucket": "IOT-Parking",
        "x": 310,
        "y": 1120,
        "wires": []
    },
    {
        "id": "834f68738ffc1ab4",
        "type": "comment",
        "z": "1f172e9da11781aa",
        "name": "The following is the simulation of entry gate of parking lot",
        "info": "",
        "x": 230,
        "y": 160,
        "wires": []
    },
    {
        "id": "a478d7149552ae83",
        "type": "comment",
        "z": "1f172e9da11781aa",
        "name": "The following is the simulation of actuator in exit gate",
        "info": "",
        "x": 220,
        "y": 980,
        "wires": []
    },
    {
        "id": "1e8d7dce619d3a2b",
        "type": "function",
        "z": "1f172e9da11781aa",
        "name": "create no booking msg",
        "func": "msg = {\"payload\":\"Sorry! there is no any booking for the incoming vehicle\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "f21826c53284ad4e"
            ]
        ]
    },
    {
        "id": "318189a426551c31",
        "type": "function",
        "z": "1f172e9da11781aa",
        "name": "",
        "func": "var entryCount = 1;\nif(flow.get('entryCount')){\n    entryCount += parseInt(flow.get('entryCount'));   \n}\nflow.set('entryCount', entryCount)\nmsg = {payload:entryCount};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "dca4d7d042083bd7",
                "4601feff9295934e"
            ]
        ]
    },
    {
        "id": "4601feff9295934e",
        "type": "debug",
        "z": "1f172e9da11781aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4280ac5ab1d82a32",
        "type": "inject",
        "z": "1f172e9da11781aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1640,
        "wires": [
            [
                "229a30236c417cc4"
            ]
        ]
    },
    {
        "id": "229a30236c417cc4",
        "type": "function",
        "z": "1f172e9da11781aa",
        "name": "",
        "func": "\nflow.set('entryCount', 0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "44479277321f9a71",
        "type": "MySQLdatabase",
        "name": "",
        "host": "172.17.0.7",
        "port": "3306",
        "db": "SmartParking",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "e157bdfbee11adb2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.17.0.3",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "06453e8616cf59b9",
        "type": "influxdb",
        "hostname": "172.17.0.6",
        "port": "8086",
        "protocol": "http",
        "database": "parking_slot",
        "name": "Record Incoming Vechicles",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    }
]